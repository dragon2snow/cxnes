Configuration
-------------
cxNES uses a simple "key=value" configuration format.  Blank
lines are allowed, and '#' may be used at the start of a line to
denote a comment.  Key names are not case-sensitive.  Values are also
not usually case-sensitive, but this depends on what the configuration
option is used for.  Path names, for example, are case-sensitive on *nix
systems. A full list of configuration options and what they
do is provided at the end of this document.

cxNES will look for a configuration file in ~/.cxnes/config.
You can force it to use a different file by passing the
'--maincfgfile=FILENAME' option on the command line.  You can also
supress loading of the main config file entirely by passing the
'--no-maincfg' option.

Additionally, cxNES can load a ROM-specific config file.  This
makes it possible to tweak the configuration for a particular game,
such as selecting the attached input device, enabling four-player
mode, changing the screen crop settings, etc.  These settings are
applied *after* those specified in the main config file so you only
need to specify your common settings once.

The config file must have the same name as the ROM file, but with a
.cfg extension.  cxNES will look for the file in the same
directory as the ROM file first, then in the config path (~/.cxnes/cfg
by default).  For example, if your ROM file is named 'roms/myrom.nes',
the following paths will be tried when looking for a ROM-specific
configuration:

* roms/myrom.cfg
* ~/.cxnes/cfg/myrom.cfg

You can specify an alternative path to try for the ROM-specific config
by passing '--romcfgfile=FILENAME' on the commandline.  You can also
suppress loading of the configuration entirely by passing
'--no-romcfg, or re-enable it with '--romcfg'.

The configuration variable 'skip_romcfg' can be set to 'true' to
disable ROM-specific configuration, or 'false' to enable it.  The
default is 'false'.

You can override the default directory where cxNES looks for
ROM configuration files by setting 'path.config' in the main config
file.  The value must be an absolute path.  The default is
~/.cxnes/cfg.

You can set a configuration option on the commandline by passing '-o
key=value' or '--option key=value'.  Any number of options may be set
this way. This will override any previous value these options were
set to in the main or ROM-specific configurations.

There are a number of configuration variables related to keybindings
that are described in input_events.txt.  The remaining variables are
described below:

PPU Configuration
-----------------
no_sprite_limit (BOOLEAN): Enable support for > 8 sprites per scanline.
                           Default: false

allow_sprite_hiding (BOOLEAN): Attempt to detect when the 8 sprite limit has
                               been triggered intentionally to hide certain
                               sprites and honor the limit on those scanlines.
                               Only used when no_sprite_limit is true.
                               Default: false

use_scanline_renderer (BOOLEAN): Enable optimized renderer for scanlines that the
                                 PPU was able to render without being interrupted
                                 by the CPU.
                                 Default: true


window_scale (INTEGER):  The scaling factor to use for windowed mode.
                         Default: 1
fullscreen_scale (INTEGER): The scaling factor to use for fullscreen mode.
                            Default: -1 (auto)

fullscreen (BOOLEAN): Start cxNES in full-screen mode.
                      Default: false

vsync (BOOLEAN): Wait for vertical sync before drawing the framebuffer to
                 reduce tearing.
                 Default: false

stretch_to_fit (BOOLEAN): Stretch image to fit screen while maintaining aspect ratio.
                          Default: true

ntsc_palette (STRING): Palette to use for NTSC games.  Can be one of: ntsc, pal, FIXME
                       Default: ntsc

ntsc_palette_file (PATHNAME): Path of file from which to load palette for NTSC games.
                              Default: undefined

pal_palette (STRING): Palette to use for PAL games.  Can be one of: ntsc, pal, FIXME
                      Default: ntsc

pal_palette_file (PATHNAME): Path of file from which to load palette for PAL games.
                             Default: undefined

ntsc_pixel_aspect_ratio (STRING): Pixel Aspect Ratio (PAR) to use for NTSC games if
                                  'tv_aspect_ratio' is true.
                                  Default: 1.143:1
                                  
pal_pixel_aspect_ratio (STRING): Pixel Aspect Ratio (PAR) to use for PAL games if
                                 'tv_aspect_ratio' is true.
                                 Default: 1.3862:1

tv_aspect_ratio (BOOLEAN): Enables stretching the image horizontally to emulate the
                           pixel aspect ratio of the NES on a TV.
                           Default: false                                  

ntsc_left_crop (INTEGER): Starting pixel offset for left side of NTSC image.
			  Default: 0

ntsc_right_crop (INTEGER): Ending pixel offset for right side of NTSC image.
			   Default: 255

ntsc_right_crop (INTEGER): Starting pixel offset for top of NTSC image.
			   Default: 8

ntsc_right_crop (INTEGER): Ending pixel offset for bottom of NTSC image.
			   Default: 231

pal_left_crop (INTEGER): Starting pixel offset for left side of PAL image.
			 Default: 0

pal_right_crop (INTEGER): Ending pixel offset for right side of PAL image.
			  Default: 255

pal_right_crop (INTEGER): Starting pixel offset for top of PAL image.
			  Default: 1

pal_right_crop (INTEGER): Ending pixel offset for bottom of PAL image.
			  Default: 239

ntsc_saturation
ntsc_hue
ntsc_contrast
ntsc_brightness
ntsc_gamma

osd_font (PATHNAME): Path of TrueType font to use for OSD text
	 	     Default: undefined
osd_enabled (BOOLEAN): Enables/disables on-screen status messages
	    	       Default: true

osd_font_min_size (INTEGER): Minimum font size to use for OSD (when scaling factor == 1)
		  	     Default: 8

osd_fg_color (32-bit INTEGER): Color of OSD text
	     	     	       Default: 0xffffff
	     	     
osd_bg_color (32-bit INTEGER): Color of OSD background
	     	     	       Default: 0x000064
osd_fg_alpha (8-bit INTEGER):  Opacity of OSD text
	     	    	       Default: 255
osd_bg_alpha (8-bit INTEGER):  Opacity of OSD background
	     	    	       Default: 160
osd_delay (INTEGER): Time (in seconds) that status messages stay on-screen
	  	     Default: 2
nsf_rom (PATH): Pathname of ROM file to use for NSF player
		Default: undefined

sample_rate (INTEGER): Sample rate to use for audio
	    	       Default: 48000

audio_buffer_size
dynamic_rate_control
master_volume
fds_volume
vrc6_pulse_volume
vrc6_sawtooth_volume
namco163_volume
mmc5_pulse_volume
sunsoft5b_volume

swap_pulse_duty_cycles (BOOLEAN): Enables swapping of the 25% and 50% duty cycles for the pulse channels
		             	  to simulate incorrect behavior of many NES/Famicom clones.
				  Default: false

raw_pcm_filter (INTEGER):  Enable filtering of raw PCM writes to reduce popping
	       		   Values: 0 (None) 1 (Filter during DMC playback) 2 (Filter all PCM writes)
			   Default: 0 (None)
apu_volume
path.save
path.config
path.patch
maincfg
cfgdir
romcfg
skip_maincfg
skip_romcfg
nvram_use_mmap
autopatch_enabled
force_timing
save_always_uses_romdir
default_port1_device
default_port2_device
default_port3_device
default_port4_device
default_exp_device
cpu_trace
blargg_test_rom
cheats_enabled
xscreensaver_deactivate_delay
nsf_first_track
mmc6_compat_hack
fds_bios_patch_enabled
fds_auto_disk_change
guess_region_by_filename (BOOLEAN): Enable guessing of video timing based on ROM filename (iNES only)
			 	    Default: true
auto_prg_ram (BOOLEAN): Provide 8K of PRG RAM from $6000-$7FFF if board can support it (iNES only (not NES 2.0))
	     		Default: true
board.dip_switch_1
board.dip_switch_2
board.dip_switch_3
board.dip_switch_4
board.dip_switch_5
board.dip_switch_6
board.dip_switch_7
board.dip_switch_8
input.controller.four_player_mode
input.controller.mask_opposite_directions
input.controller.vs_swap_controls
input.controller.combine_p1p2
input.arkanoid.paddle2_connected
